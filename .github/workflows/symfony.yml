# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    
    env:
       DB_PWD: ${{ secrets.BDDMOTDEPASSE }}
      # DATABASE_URL: "mysql://root:${{secrets.BDDMOTDEPASSE}}@mysql:3306/ina_zaoui?serverVersion=10.3.39-MariaDB&charset=utf8mb4"
    # DB_PWD: password
      DATABASE_URL: "mysql://root:${{env.DB_PWD}}@mysql:3306/ina_zaoui?serverVersion=10.3.39-MariaDB&charset=utf8mb4"
    services:
      mariadb:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: ${{env.DB_PWD}}
          MYSQL_DATABASE: ina_zaoui
          MYSQL_USER: root
          MYSQL_PASSWORD: ${{env.DB_PWD}}
        ports:
          - 3306:3306  # Expose le port 3306 pour que le service soit accessible
        options:
            --health-cmd="mysqladmin ping"
            --health-timeout=10s
            --health-retries=3

    steps:
      - name: setup github Action
        uses: actions/checkout@v4

    # uses: shivammathur/setup-php@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo_pgsql, pdo, pgsql, zip, gd, dom, fileinfo, curl, iconv, imagick, bcmath, soap, opcache

      - name: Set up MariaDB
        run: |

      - name: Copy .env.test.local
        run: |
          php -r " if (!file_exists('.env.test.local')) {
            \$content = \"KERNEL_CLASS='App\\\\Kernel'\n\";
            \$content .= \"APP_SECRET='\\\$ecretf0rt3st'\n\";
            \$content .= \"SYMFONY_DEPRECATIONS_HELPER=999999\n\";
            \$content .= \"PANTHER_APP_ENV=panther\n\";
            \$content .= \"PANTHER_ERROR_SCREENSHOT_DIR=./var/error-screenshots\n\";
            file_put_contents('.env.test.local', \$content); }"
            
            echo "DATABASE_URL=\"mysqlsql://mysql:${DB_PWD}@localhost:5432/inazoui?serverVersion=16&charset=utf8\"" >> .env.test.local
            cat .env.test.local

      - name: Wait for Maria to be ready
        run: |
          max_retries=20
          retries=0
          until mysqladmin ping -h localhost --silent; do
            retries=$((retries+1))
            if [ $retries -ge $max_retries ]; then
              echo "MariaDB  is not ready after $max_retries attempts."
              exit 1
            fi
            echo "Waiting for Maria... (Attempt $retries of $max_retries)"
            sleep 2
          done
      
      - name: Install Composer
        run: composer install
        
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
            
      - name: Create database et migration
        run: |
          php bin/console doctrine:database:create --env=test --if-not-exists 
          php bin/console doctrine:migration:migrate --env=test --no-interaction
        
      - name: Install fixture
        run: php bin/console doctrine:fixtures:load --env=test --no-interaction

      - name : install asset et compile
        run: |
          php bin/console importmap:install
          php bin/console asset-map:compile

      - name: controle statique avec phpstan
        run: vendor/bin/phpstan analyse src --error-format=github
        
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit

